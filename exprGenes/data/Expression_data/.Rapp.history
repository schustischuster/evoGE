set.seed(11)#
a <- data.frame(value=rnorm(500,7.5), sign=1)#
b <- data.frame(value=rnorm(500,10), sign=0)#
df <- rbind(a,b)
# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 1) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
boxplot(a[,1],b[,1],matched[,1])
# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
boxplot(a[,1],b[,1],matched[,1])
# Create background gene set with caliper matching#
#
		calpr <- 10#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 10) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
boxplot(a[,1],b[,1],matched[,1])
# Create background gene set with caliper matching#
#
		calpr <- 10#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
boxplot(a[,1],b[,1],matched[,1])
matched
set.seed(11)#
a <- data.frame(value=rnorm(500,7.5), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,11), sign=0)#
df <- rbind(a,b)#
# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,11), sign=0)#
df <- rbind(a,b)#
# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 10) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
matched
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.001) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
matched
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
quartz()
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = TRUE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
matched
quartz()
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = TRUE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
matched
unique(matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
matched
unique(matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.001) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.1) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 1) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 5) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.1) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 5) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 1) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.1) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.01) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.001) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.0001) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))5
set.seed(11)#
a <- data.frame(value=rnorm(500,7), sign=1)#
b <- data.frame(value=rnorm(500,8), sign=0)#
df <- rbind(a,b)#
		# Create background gene set with caliper matching#
#
		calpr <- 1#
#
        matchSample <- function(x) {#
#
            success <- FALSE#
            while (!success) {#
#
                # Create background gene set#
                match_res <- matchit(sign ~ value, x, method = "nearest", caliper = calpr, #
                	std.caliper = TRUE, distance = "logit", replace = FALSE, m.order = "data", #
                    ratio = 1)#
                match_res_m <- match_res$match.matrix#
#
                # Extract standard mean difference from matchIt summary data#
                comp <- as.data.frame(summary(match_res, standardize = TRUE)["sum.matched"])#
                stmdif <- abs(comp[1,3])#
                varR <- abs(comp[1,4])#
#
                calpr <- calpr-0.01#
#
                # check for success#
                success <- ((stmdif <= 0.0005) && (varR >= 0.99))#
            }#
#
            return(match_res_m)#
        }#
#
        match_res_df <- matchSample(df)#
#
        matched <- df[match_res_df,]#
#
        boxplot(a[,1],b[,1],matched[,1])
length(unique(matched[,1]))5
length(unique(matched[,1]))
450+450+120+204+(2*(28*4.4))*(2*(2.8*3.5))
450+450+120+204+(2*(28*4.4))+(2*(2.8*3.5))
450+450+120+204+(2*(28*4.3))+(2*(2.8*3.5))
450+450+120+204+(2*(28*4.3))+(2*(2.8*3.1))
450+450+120+204+(2*(28*3.7))+(2*(2.8*3.1))
622-582
582-559
450+450+120+205+125+125+20
450+450+120+205+124+124+20
# Create contingency table#
        tab <- matrix(c(230, 170, 2450-230, #
            2450-170), ncol=2, byrow=TRUE)#
#
        colnames(tab) <- c('stable', 'variable')#
        rownames(tab) <- c('GO', 'other')#
        tab <- as.table(tab)#
#
        chisq <- chisq.test(tab, correct=T)$p.value
chisq
# Create contingency table#
        tab <- matrix(c(200, 200, 2450-200, #
            2450-200), ncol=2, byrow=TRUE)#
#
        colnames(tab) <- c('stable', 'variable')#
        rownames(tab) <- c('GO', 'other')#
        tab <- as.table(tab)#
#
        chisq <- chisq.test(tab, correct=T)$p.value
chisq
chisq.test(tab, correct=T)$expected
# Create contingency table#
        tab <- matrix(c(230, 170, 2450-230, #
            2450-170), ncol=2, byrow=TRUE)#
#
        colnames(tab) <- c('stable', 'variable')#
        rownames(tab) <- c('GO', 'other')#
        tab <- as.table(tab)#
#
        chisq <- chisq.test(tab, correct=T)$p.value
chisq
chisq.test(tab, correct=T)$expected
a <- rep("stable", 500)
a[1:10]
b <- rep("variable", 500)
b[1:10]
all <- c(a,b)
length(all)
all[1:10]
all[490:510]
st <- all["stable"]
length(st)
st
st <- all[all=="stable"]
length(st)
st[1:10]
length(all[all=="stable"])
sample <- sample(all,100)
length(sample)
sample
length(sample[sample=="stable"])
# Create contingency table#
        tab <- matrix(c(250, 250, 2250-250, #
            2250-250), ncol=2, byrow=TRUE)#
#
        colnames(tab) <- c('stable', 'variable')#
        rownames(tab) <- c('GO', 'other')#
        tab <- as.table(tab)#
#
        chisq <- chisq.test(tab, correct=T)$p.value
chisq
chisq.test(tab, correct=T)$expected
tab
# Create contingency table#
        tab <- matrix(c(270, 230, 2250-270, #
            2250-230), ncol=2, byrow=TRUE)#
#
        colnames(tab) <- c('stable', 'variable')#
        rownames(tab) <- c('GO', 'other')#
        tab <- as.table(tab)#
#
        chisq <- chisq.test(tab, correct=T)$p.value
chisq
# Create contingency table#
        tab <- matrix(c(275, 225, 2250-275, #
            2250-225), ncol=2, byrow=TRUE)#
#
        colnames(tab) <- c('stable', 'variable')#
        rownames(tab) <- c('GO', 'other')#
        tab <- as.table(tab)#
#
        chisq <- chisq.test(tab, correct=T)$p.value
chisq
a <- rep("stable", 2500)
b <- rep("variable", 2500)
all <- c(a,b)
length(all)
sample <- sample(all,250)
length(all[all=="stable"])
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
sample <- sample(all,500)
length(sample[sample=="stable"])
fishtest <- fisher.test(tab)
tab
fishtest
fishtest <- fisher.test(tab, alternative="greater")
fishtest
fishtest <- fisher.test(tab, alternative="less")
fishtest
275/225
275   /   225
fishtest <- fisher.test(tab, alternative="two.sided")
fishtest
fishtest <- fisher.test(tab)
fishtest
chisq <- chisq.test(tab, correct=T)
chisq
length(v)
length(tab)
rep(1/length(tab))
rep(1/length(tab), length(tab))
chisq <- chisq.test(tab, correct=T, suimulate-p-value = TRUE)
chisq <- chisq.test(tab, correct=T, suimulate.p.value = TRUE)
chisq <- chisq.test(tab, correct=T, simulate.p.value = TRUE)
chisq
chisq <- chisq.test(tab, correct=T, simulate.p.value = TRUE, B=10000)
chisq
chisq <- chisq.test(tab, correct=T, simulate.p.value = TRUE, B=100000)
chisq
chisq <- chisq.test(tab, correct=T, simulate.p.value = TRUE, B=1000000)
chisq
275/325
325/275
380*1.181818
450*2
900+120+205+125+125+20
1720+450+200
1720+450+200+115+100
1500+600+600+180+70+70
3020-2585
log2(10+1)
log2(20+1)
log2(15+1)
log2(8+1)
log2(7+1)
log2(70+1)
log2(200+1)
log2(50+1)
log2(40+1)
log2(30+1)
log2(25+1)
log2(15+1)
25*7003
75*7003
125*7003
log2(10+1)
log2(7+1)
log2(70+1)
log2(50+1)
log2(40+1)
log2(30+1)
setwd("/Volumes/User/Shared/Christoph_manuscript/DevSeq_paper/Analysis/Analysis_2019/A_thaliana_gene_exression_map/20200401_CS_exprGenes/data/Expression_data")
list.files()
transcripts_tpm <- read.table("AT_transcripts_complete_table_tpm_sample_names.csv", sep=";", dec=".", header=TRUE, stringsAsFactors=FALSE)
all_transcripts_tpm <- read.table("AT_transcripts_complete_table_tpm_sample_names.csv", sep=";", dec=".", header=TRUE, stringsAsFactors=FALSE)
protein_coding_subset <- subset(express_data_th_avg, biotype=="protein_coding")
all_transcripts_tpm <- subset(all_transcripts_tpm, biotype=="protein_coding")
dim(transcripts_tpm)
dim(all_transcripts_tpm)
all_transcripts_tpm[1:5,1:5]
unique(transcripts_tpm$biotype)
transcripts_tpm <- read.table("AT_transcripts_complete_table_tpm_sample_names.csv", sep=";", dec=".", header=TRUE, stringsAsFactors=FALSE)
all_transcripts_tpm <- read.table("AT_transcripts_complete_table_tpm_sample_names.csv", sep=";", dec=".", header=TRUE, stringsAsFactors=FALSE)
dim()
dim(transcripts_tpm)
dim(all_transcripts_tpm)
unique(transcripts_tpm$biotype)
unique(all_transcripts_tpm $biotype)
unique(all_transcripts_tpm$biotype)
all_transcripts_tpm <- subset(all_transcripts_tpm, biotype=="protein_coding")
dim(all_transcripts_tpm)
58775-52298
136-136
all_transcripts_tpm[1:5,1:5]
write.table(all_transcripts_tpm, file="AT_transcripts_complete_table_tpm_sample_names.csv", sep=";", dec=".", row.names=FALSE, col.names=TRUE)
